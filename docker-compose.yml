services:
  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - app-php84
      - app-php74
      - app-php56
    networks:
      - sistemas-network
    restart: unless-stopped

  # MySQL 8.0 (Versão mais recente)
  mysql8:
    image: mysql:8.0
    container_name: mysql8
    environment:
      MYSQL_ROOT_PASSWORD: sistemas_root_2024
      MYSQL_DATABASE: sistemas_db
      MYSQL_USER: sistemas_user
      MYSQL_PASSWORD: sistemas_pass
    volumes:
      - mysql8-data:/var/lib/mysql
      - mysql8-conf:/etc/mysql/conf.d
      - ./mysql/init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - sistemas-network
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password

  # MySQL 5.7 (Versão legada)
  mysql57:
    image: mysql:5.7
    container_name: mysql57
    environment:
      MYSQL_ROOT_PASSWORD: sistemas_root_legacy
      MYSQL_DATABASE: sistemas_legacy_db
      MYSQL_USER: sistemas_legacy_user
      MYSQL_PASSWORD: sistemas_legacy_pass
    volumes:
      - mysql57-data:/var/lib/mysql
      - mysql57-conf:/etc/mysql/conf.d
    ports:
      - "3307:3306"
    networks:
      - sistemas-network
    restart: unless-stopped

  # Aplicação com PHP 8.4
  app-php84:
    build:
      context: ./docker/php84
      dockerfile: Dockerfile
    container_name: app-php84
    volumes:
      - apps-php84-data:/var/www/html
      - ./logs/php84:/var/log/php
    depends_on:
      - mysql8
    networks:
      - sistemas-network
    restart: unless-stopped
    environment:
      - PHP_VERSION=8.4

  # Aplicação com PHP 7.4
  app-php74:
    build:
      context: ./docker/php74
      dockerfile: Dockerfile
    container_name: app-php74
    volumes:
      - apps-php74-data:/var/www/html
      - ./logs/php74:/var/log/php
    depends_on:
      - mysql8
    networks:
      - sistemas-network
    restart: unless-stopped
    environment:
      - PHP_VERSION=7.4

  # Aplicação com PHP 5.6 (Legado)
  app-php56:
    build:
      context: ./docker/php56
      dockerfile: Dockerfile
    container_name: app-php56
    volumes:
      - apps-php56-data:/var/www/html
      - ./logs/php56:/var/log/php
    depends_on:
      - mysql57
    networks:
      - sistemas-network
    restart: unless-stopped
    environment:
      - PHP_VERSION=5.6

  # Redis para cache (opcional, mas recomendado para Laravel)
  redis:
    image: redis:7-alpine
    container_name: redis-cache
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - sistemas-network
    restart: unless-stopped

networks:
  sistemas-network:
    driver: bridge
    name: sistemas-network

volumes:
  mysql8-data:
  mysql57-data:
  redis-data:
  mysql8-conf:
  mysql57-conf:
  apps-php84-data:
  apps-php74-data:
  apps-php56-data:
